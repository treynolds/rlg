/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RwJFontChooser.java
 *
 * Created on Jun 26, 2013, 8:56:56 AM
 */
package rw;

/**
 *
 * @author tedr
 */
public class RwJFontChooser extends javax.swing.JDialog {
    
    
    protected java.awt.Font resultFont;
    protected String resultName;
    protected int resultSize;
    protected boolean isBold;
    protected boolean isItalic;
    protected static final int DEFAULT_SIZE = 18;
    protected String[] fontList= java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment()
        .getAvailableFontFamilyNames();
    

    /** Creates new form RwJFontChooser */
    public RwJFontChooser(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
    }
    
    public RwJFontChooser(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        setLocationRelativeTo(parent);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        fontPreviewLabel = new javax.swing.JLabel();
        applyButton = new javax.swing.JButton();
        previewButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        top = new javax.swing.JPanel();
        fontNameScroller = new javax.swing.JScrollPane();
        fontNameList = new javax.swing.JList(fontList);
        fontSizeScroller = new javax.swing.JScrollPane();
        fontSizeList = new javax.swing.JList();
        boldCheckBox = new javax.swing.JCheckBox();
        italicsCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 300));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        fontPreviewLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fontPreviewLabel.setText("Test String ABCDEF abcdef");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 60;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(fontPreviewLabel, gridBagConstraints);

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 80;
        gridBagConstraints.gridwidth = 33;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.33;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(applyButton, gridBagConstraints);

        previewButton.setText("Preview");
        previewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previewButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 33;
        gridBagConstraints.gridy = 80;
        gridBagConstraints.gridwidth = 33;
        gridBagConstraints.gridheight = 20;
        gridBagConstraints.weightx = 0.33;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(previewButton, gridBagConstraints);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 66;
        gridBagConstraints.gridy = 80;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.34;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(cancelButton, gridBagConstraints);

        top.setLayout(new java.awt.GridBagLayout());

        fontNameScroller.setViewportView(fontNameList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        top.add(fontNameScroller, gridBagConstraints);

        fontSizeList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "8", "10", "11", "12", "14", "16", "18", "20", "24", "30", "36", "40", "48", "60", "72" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        fontSizeList.setSelectedValue("18",true);
        fontSizeScroller.setViewportView(fontSizeList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        top.add(fontSizeScroller, gridBagConstraints);

        boldCheckBox.setText("Bold");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.5;
        top.add(boldCheckBox, gridBagConstraints);

        italicsCheckBox.setText("Italic");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.5;
        top.add(italicsCheckBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.6;
        getContentPane().add(top, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        previewFont();
        dispose();
        setVisible(false);
    }//GEN-LAST:event_applyButtonActionPerformed

    private void previewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previewButtonActionPerformed
        previewFont();
    }//GEN-LAST:event_previewButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        resultFont = null;
        resultName = null;
        resultSize = 0;
        isBold = false;
        isItalic = false;
        dispose();
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                RwJFontChooser dialog = new RwJFontChooser(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public void previewFont(){
        resultName = (String)fontNameList.getSelectedValue();
        String resultSizeName = (String)fontSizeList.getSelectedValue();
        resultSize = Integer.parseInt(resultSizeName);
        isBold = boldCheckBox.isSelected();
        isItalic = italicsCheckBox.isSelected();
        int attrs = java.awt.Font.PLAIN;
        if (isBold)
            attrs = java.awt.Font.BOLD;
        if (isItalic)
            attrs |= java.awt.Font.ITALIC;
        resultFont = new java.awt.Font(resultName, attrs, resultSize);
        fontPreviewLabel.setFont(resultFont);
        pack();
    }
    
    public String getSelectedName() {
    return resultName;
  }

  /** Retrieve the selected size */
  public int getSelectedSize() {
    return resultSize;
  }

  /** Retrieve the selected font, or null */
  public java.awt.Font getSelectedFont() {
    return resultFont;
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton applyButton;
    public javax.swing.JCheckBox boldCheckBox;
    public javax.swing.JButton cancelButton;
    public javax.swing.JList fontNameList;
    public javax.swing.JScrollPane fontNameScroller;
    public javax.swing.JLabel fontPreviewLabel;
    public javax.swing.JList fontSizeList;
    public javax.swing.JScrollPane fontSizeScroller;
    public javax.swing.JCheckBox italicsCheckBox;
    public javax.swing.JButton previewButton;
    public javax.swing.JPanel top;
    // End of variables declaration//GEN-END:variables
}
